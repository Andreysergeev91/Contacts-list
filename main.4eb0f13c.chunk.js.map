{"version":3,"sources":["images/account_circle-black-18dp.svg","Components/Contact.js","Components/Contacts-list.js","Components/Detailed-contact.js","Components/Header.js","App.js","index.js"],"names":["module","exports","Contact","user","this","props","item","onClick","handleLink","className","alt","name","src","avatar","Component","ContactsList","userData","data","map","index","key","to","handleActiveLink","DetailedContact","id","useParams","phone","company","website","useState","edittingState","setEdittingState","companyValue","setCompany","phoneValue","setPhone","websiteValue","setWebsite","setName","type","defaultValue","onChange","e","target","value","userInfo","onNameChange","Header","logo","App","state","gettingDataFromAPI","bind","handleInfoChange","localStorage","getItem","JSON","parse","setState","fetch","then","res","json","setItem","stringify","info","slice","path","exact","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eb0f13c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/account_circle-black-18dp.be049e9a.svg\";","import React, { Component } from \"react\";\nimport \"./Contact.css\";\n\nclass Contact extends Component {\n    \n   \n\n    render() {\n        const user =this.props.item;\n        \n        return (\n            //when contact is clicked the transferred function is called\n            <div onClick={()=>this.props.handleLink(user)}  className=\"contact\">\n                <img className=\"contact__avatar\" alt={user.name} src={user.avatar}/>\n                <h2 className=\"contact__name\">{this.props.name}</h2>\n              </div>\n\n        );\n\n    };\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport \"./Contacts-list.css\";\nimport Contact from \"./Contact\";\nimport { Link } from \"react-router-dom\";\n\nclass ContactsList extends Component {\n\n    render() {\n        const userData = this.props.data;\n        return (\n            <ul className=\"contacts-list\">\n                {userData.map((item, index) => {\n\n                    return <li className=\"list-item-contact\" key={index}>\n                        <Link className=\"contact-link\" to={item.name}>\n                            <Contact handleLink={this.props.handleActiveLink} item={item} name={item.name} />\n                        </Link></li>\n                })}\n            </ul>\n        );\n    }\n}\n\nexport default ContactsList;\n","import React, { useState } from \"react\";\nimport \"./Detailed-contact.css\";\nimport {\n    useParams\n} from \"react-router-dom\";\n\nexport default function DetailedContact(props) {\n    let { id } = useParams();\n    const { phone, company, website } = props.user;\n    const [edittingState, setEdittingState] = useState(false); //state hook for toggle editting state\n    const [companyValue, setCompany] = useState(company.name); //state hook for user's company name\n    const [phoneValue, setPhone] = useState(phone); //state hook for user's phone\n    const [websiteValue, setWebsite] = useState(website); //state hook for user's website\n    const [name, setName] = useState(id); //state hook for user's name\n\n\n    const handleClick = () => {\n        let userInfo = {\n            name,\n            phone: phoneValue,\n            company: companyValue,\n            website: websiteValue\n        };\n\n        setEdittingState(false);\n        props.onNameChange(userInfo, id);\n\n    };\n\n\n    if (!edittingState) {\n        return (\n            <div className=\"detailed-contact\">\n                <div className=\"background-container\"></div>\n                <img className=\"detailed-contact__avatar\" alt={props.user.name} src={props.user.avatar} />\n                <h1 className=\"detailed-contact__name\">{name}</h1>\n                <div className=\"detailed-contact__info-container\">\n                    <p className=\"detailed-contact__info-field\">Phone:</p>\n                    <p className=\"detailed-contact__info\">{phoneValue}</p>\n                    <p className=\"detailed-contact__info-field\">Company:</p>\n                    <p className=\"detailed-contact__info\">{companyValue}</p>\n                    <p className=\"detailed-contact__info-field\">Website:</p>\n                    <p className=\"detailed-contact__info\">{websiteValue}</p>\n                </div>\n                <button className=\"detailed-contact__button\" onClick={() => setEdittingState(true)}>Edit</button>\n            </div>\n\n        );\n    } else {\n        return (\n\n            <div className=\"detailed-contact\">\n                <div className=\"background-container\"></div>\n                <img className=\"detailed-contact__avatar\" alt={props.user.name} src={props.user.avatar} />\n                <input className=\"detailed-contact__input-name\" type=\"text\" name=\"name\" defaultValue={name} onChange={(e) => setName(e.target.value)}></input>\n                <div className=\"detailed-contact__info-container\">\n                    <p className=\"detailed-contact__info-field\">Phone:</p>\n                    <input className=\"detailed-contact__input\" type=\"text\" name=\"phone\" defaultValue={phoneValue} onChange={(e) => setPhone(e.target.value)}></input>\n                    <p className=\"detailed-contact__info-field\">Company:</p>\n                    <input className=\"detailed-contact__input\" type=\"text\" name=\"company\" defaultValue={companyValue} onChange={(e) => setCompany(e.target.value)}></input>\n                    <p className=\"detailed-contact__info-field\">Website:</p>\n                    <input className=\"detailed-contact__input\" type=\"text\" name=\"website\" defaultValue={websiteValue} onChange={(e) => setWebsite(e.target.value)}></input>\n                </div>\n                <button className=\"detailed-contact__button\" onClick={handleClick}>Save</button>\n            </div>\n\n        );\n    }\n\n};\n\n","import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport logo from \"../images/account_circle-black-18dp.svg\"\n\nclass Header extends Component {\n\n    render() {\n\n        return (\n            <div className=\"header\">\n                <h1>Contacts List</h1>\n                <img className=\"logo\" src={logo} alt=\"contacts\"></img>\n            </div>\n\n        );\n\n    };\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport ContactsList from \"./Components/Contacts-list\";\nimport DetailedContact from \"./Components/Detailed-contact\";\nimport Header from \"./Components/Header\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  //initial state\n      userData: [],\n      user: null\n    };\n    this.gettingDataFromAPI = this.gettingDataFromAPI.bind(this); //binding class methods\n    this.handleInfoChange = this.handleInfoChange.bind(this); //binding class methods\n    this.handleLink = this.handleLink.bind(this); //binding class methods\n  }\n\n  componentDidMount() {\n    //сhecking of data in localstorage\n    if (localStorage.getItem(\"userData\") === null) {\n      return this.gettingDataFromAPI();\n    } else {\n      let data = JSON.parse(localStorage.getItem(\"userData\"));\n      return this.setState({ userData: data });\n    }\n  }\n\n\n  //class method for receiving data from API\n  gettingDataFromAPI() {\n\n    return fetch(\"http://demo.sibers.com/users\")\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ userData: data });\n        localStorage.setItem(\"userData\", JSON.stringify(this.state.userData));\n      });\n  }\n\n\n  //class method for updating data in component state when contact data is changed in Detail-contact component\n  //this method is transfered with props to Detail-contact Component \n  handleInfoChange(info, id) {\n    const userData = this.state.userData.slice();\n    userData.map((item) => {\n      if (item.name === id) {\n        item.name = info.name;\n        item.phone = info.phone;\n        item.company.name = info.company;\n        item.website = info.website;\n      };\n      return item;\n    });\n    this.setState({ userData: userData });\n    localStorage.setItem(\"userData\", JSON.stringify(this.state.userData));\n  }\n\n//class method for transfer individual user data to each Detail-contact component \n//this method is transfered with props to ContactsList Component \n  handleLink(item) {\n    this.setState({ user: item });\n  }\n\n\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/' exact>\n              <Header />\n              <ContactsList handleActiveLink={this.handleLink} data={this.state.userData} />\n            </Route>\n            <Route path=\"/:id\" children={<DetailedContact user={this.state.user} onNameChange={this.handleInfoChange} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n      <App />,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}